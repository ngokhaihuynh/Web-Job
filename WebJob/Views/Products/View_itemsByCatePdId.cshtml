@*@model  IEnumerable<WebJob.Models.EF.Product>*@
@model PagedList.IPagedList<WebJob.Models.EF.Product>
@using PagedList.Mvc;
@if (Model != null && Model.Any())
{
    foreach (var item in Model)
    {
        var strImage = "";
        var img = item.ProductImages.FirstOrDefault(x => x.IsDefault);
        if (img != null)
        {
            strImage = img.Image;
        }

        <div class="job pagi @item.CategoryProduct.Alias">
            <div class="job-content">
                <div class="job-logo">
                    <a href="#">
                        <img src="@strImage" class="job-logo-ima" alt="job-logo">
                    </a>
                </div>

                <div class="job-desc">
                    <div class="job-title">
                        <a href="/chi-tiet-goi/@item.Alias-p@(item.ProductID)">@item.Title</a>
                    </div>

                    @*<div class="job-company">
                            <a href="#">Fpt Software</a> | <a href="#" class="job-address">
                                <i class="fa fa-map-marker" aria-hidden="true"></i>
                                Đà Nẵng
                            </a>
                        </div>*@


                    <div class="job-inf">

                        <div class="job-salary">
                            <i class="fa fa-money" aria-hidden="true"></i>


                            @if (item.PriceSale.HasValue && item.PriceSale > 0)
                            {
                                <span style="color:red" class="salary-min">@item.PriceSale.Value.ToString("N0")</span>
                                <span>-</span>
                                <span style="text-decoration:line-through" class="salary">@item.Price.ToString("N0")</span>
                            }
                            else
                            {
                                <span class="salary-min">@item.Price.ToString("N0")</span>

                            }


                            @*<span class="salary-max">35 <em class="salary-unit">triệu</em></span>*@
                        </div>
                        <div class="job-deadline">
                            <span><i class="fa fa-clock-o" aria-hidden="true"></i> <strong>@item.CategoryProduct.Title</strong></span>
                        </div>
                    </div>
                </div>
                <div class="wrap-btn-appl">
                    <a href="#" data-id="@item.ProductID" class="btn btn-appl btnBuyNow">Mua ngay</a>
                    <a href="#" data-id="@item.ProductID" class="btn btn-danger btnAddToCart"><i class="fa-solid fa-cart-shopping"></i></a>
                </div>
            </div>
        </div>


    }
    @* <div class="pagination-wrapper">
            @Html.PagedListPager(Model, page => Url.Action("View_itemsByCatePdId", new { page }))
        </div>*@
}

<style>
    span.salary-min::after {
        content: "-";
        padding: 0 2px 0 6px;
        color: #555;
        display: none;
    }
</style>
<script>
    $(document).ready(function () {
        $('.btnBuyNow').on('click', function (e) {
            e.preventDefault();
            var id = $(this).data('id');

            $.ajax({
                url: '/ShoppingCart/BuyNow',
                type: 'POST',
                data: { id: id },
                success: function () {
                    window.location.href = '/ShoppingCart/CheckOut';  // Chuyển sang trang thanh toán
                },
                error: function () {
                    alert("Không thể kết nối với server");
                }
            });
        });
    });


</script>